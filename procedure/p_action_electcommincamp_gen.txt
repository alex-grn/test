CREATE OR REPLACE FUNCTION public.p_action_electcommincamp_gen (
  begindate date,
  enddate date,
  leveldcchairman text,
  ncount integer,
  printreport boolean,
  idlist text
)
RETURNS void AS
$body$
DECLARE
  BDATE DATE := BEGINDATE; --неоднозначная ссылка
  EDATE DATE := ENDDATE; --неоднозначная ссылка
  --LVLCOM TEXT := UPPER(LEVELELCOMMITTEE); --неоднозначная ссылка //убрали параметр levelelcommittee по событию 3829
  REC    RECORD;
  IZ     RECORD;
  RK     RECORD;
  STEMP  TEXT;
  NID    BIGINT;
  COMPIT TEXT := 'Компенсация'; --таблица pays всегда компенсация
  COMID  BIGINT;
  REGID  BIGINT;
  SUBID  BIGINT; --ID субъекта РФ
  TDOC   BIGINT;
  TIK    TEXT := 'territory'; --код ТИК в системе
  J		 INTEGER:=1;
BEGIN
  SELECT R.ID INTO SUBID FROM REGIONSRF R WHERE R.NAME = 'Российская Федерация';
  IF NCOUNT NOT IN (1,2) THEN RAISE USING MESSAGE = 'Количество строк для одного календарного дня может принимать значение 1 или 2. Введите одно из значений.'; END IF;
  FOR REC IN (SELECT S.*,
  					 LOWER(IK.LEVELELCOMMITTEE) AS LEVELCOM,
                     I.BEGINDATE,
                     I.ENDDATE,
                     I.BEGINDATETER,
                     I.ENDDATETER,
                     UPPER(I.LEVELELCAMPAIGN) AS LEVEL,
                     IK.REGIONSRFID AS REGION
                FROM ELECTCOMMINCAMP S,
                     ELECTCAMPAIGN   I,
                     ELECTCOMMITTEE  IK
               WHERE S.ID = ANY(P_SYSTEM_GET_SELECTLIST(IDLIST))
                 AND I.ID = S.ELECTCAMPAIGNID
                 AND IK.ID = S.ELECTCOMMITTEEID)
  LOOP
    SELECT S.ID INTO TDOC FROM DOCTYPES S WHERE S.CODE = 'Комплект расчетных форм';
    --Проверки
    IF (SELECT COUNT(*)
          FROM REGISTER S
         WHERE S.ELECTCOMMINCAMPID = REC.ID
           AND S.DOCTYPEID = TDOC
           AND (BDATE BETWEEN S.BEGINDATE AND S.ENDDATE OR EDATE BETWEEN S.BEGINDATE AND S.ENDDATE)) > 0 THEN
      RAISE
        USING MESSAGE = 'На периоде ' || TO_CHAR(BDATE, 'dd.mm.yyyy') || ' - ' || TO_CHAR(EDATE, 'dd.mm.yyyy') || ' сформирован комплект расчетных форм!';
    END IF;
    IF REC.LEVELCOM = TIK  or REC.LEVELCOM = 'circuit' AND REC.MTERELCOM THEN
      IF REC.BEGINDATETER > BDATE OR REC.BEGINDATETER > EDATE OR REC.ENDDATETER < BDATE OR REC.ENDDATETER < EDATE THEN
        RAISE
          USING MESSAGE = 'Неверно указан период работы членов избирательной комиссии. Для избирательной кампании период работы членов установлен c ' || TO_CHAR(REC.BEGINDATETER, 'dd.mm.yyyy') || ' по ' || TO_CHAR(REC.ENDDATETER,
                                                                                                                                                                                                                      'dd.mm.yyyy');
      ELSIF REC.BEGINDATETER IS NULL OR REC.ENDDATETER IS NULL THEN
        RAISE
          USING MESSAGE = 'Не задан период работы ТИК в избирательных кампаниях!';
      END IF;
    ELSE
      IF REC.BEGINDATE > BDATE OR REC.BEGINDATE > EDATE OR REC.ENDDATE < BDATE OR REC.ENDDATE < EDATE THEN
        RAISE
          USING MESSAGE = 'Неверно указан период работы членов избирательной комиссии. Для избирательной кампании период работы членов установлен c ' || TO_CHAR(REC.BEGINDATE, 'dd.mm.yyyy') || ' по ' || TO_CHAR(REC.ENDDATE,
                                                                                                                                                                                                                   'dd.mm.yyyy');
      END IF;
    END IF;
    --
    -- continue when UPPER(REC.LEVELELCOMMITTEE) != LVLCOM; --raise using message = '@'||upper(rec.levelelcommittee) ||'='|| lvlcom||'@';  //убрали параметр levelelcommittee по событию 3829
  
    STEMP := TDOC || '_' || --Код избирательного участка
             (SELECT COALESCE(TO_CHAR(X.ELECTDATE, 'dd.mm.yyyy'), '') FROM ELECTCAMPAIGN X WHERE X.ID = REC.ELECTCAMPAIGNID) || '_';
    UPDATE ELECTCOMMINCAMP S SET MSREGISTER = COALESCE(MSREGISTER, 0) + 1 WHERE S.ID = REC.ID; --апдейтим КОД
  
    INSERT INTO REGISTER
      (CODE, DOCTYPEID, STATUS, ELECTCAMPAIGNID, BEGINDATE, ENDDATE, ELECTCOMMINCAMPID, /* ELECDISTNUMB,*/ DATELOADTBL, RESPONSPERSID, /*, LEVELELCOMMITTEE ,indicationcircuit,indicationship*/ PRINTREPORT)
      SELECT STEMP,
             TDOC,
             1,
             REC.ELECTCAMPAIGNID,
             BDATE,
             EDATE,
             REC.ID, /* X.ELECDISTNUMB,*/
             NULL,
             NULL, /*, LVLCOM ,x.INDICATIONCIRCUIT,x.INDICATIONSHIP*/
             PRINTREPORT RETURNING ID
        INTO REGID;
    UPDATE REGISTER S SET CODE = CODE || REGID WHERE S.ID = REGID;
    FOR IZ IN (SELECT R.CODE,
                      R.ID,
                      R.POSTSID,
                      R.PERSONID,
                      CASE
                        WHEN '@' || D.NAME || '@' ILIKE '%председатель%' THEN
                         LEVELDCCHAIRMAN
                      /* else
                      'district'*/
                      END AS LVLCH
                 FROM ELECTCOMMITTEE X,
                      COMMITTEEMAN   R,
                      POSTS          D
                WHERE X.ID = REC.ELECTCOMMITTEEID
                  AND R.ELECTCOMMITTEEID = X.ID
                  AND D.ID = R.POSTSID
                  AND ((BDATE BETWEEN R.POSTBEGINDATE AND R.POSTENDDATE OR EDATE BETWEEN R.POSTBEGINDATE AND R.POSTENDDATE) OR
                      (BDATE BETWEEN R.POSTBEGINDATE AND R.POSTENDDATE AND EDATE BETWEEN R.POSTBEGINDATE AND R.POSTENDDATE) OR
                      (R.POSTBEGINDATE BETWEEN BDATE AND EDATE AND R.POSTENDDATE BETWEEN BDATE AND EDATE)))
    LOOP
      --Наполняем таблицу "члены избирательных комиссий"
      INSERT INTO REGISTERLIST
        (REGISTERID, CODE, COMMITTEEMANID, MIDDLESALARY, DEPCOEFF, LEVELDCCHAIRMAN /*, WHCOMP, WHEXTRAFULL, WHEXTRANIGHT, WHEXTRAHOL, WHEXTRAWORKDAY*/)
        SELECT REGID,
               IZ.CODE,
               IZ.ID,
               (SELECT P.VALUE
                  FROM PERSON       S,
                       PERSONSAVSLR P
                 WHERE S.ID = IZ.PERSONID
                   AND P.PERSONID = S.ID
                   AND P.ELECTCAMPAIGNID = REC.ELECTCAMPAIGNID LIMIT 1),
               0,
               IZ.LVLCH /*,
                                                                       0,
                                                                       0,
                                                                       0,
                                                                       0,
                                                                       0*/ RETURNING ID
          INTO NID;
      IF (SELECT S.LEVELELCAMPAIGN FROM ELECTCAMPAIGN S WHERE S.ID = REC.ELECTCAMPAIGNID) = 'central' THEN
      	J:=1;
        --Уровень федеральный 
        FOR RK IN (SELECT DD, --заполняем таблицу worktbl 
                          (SELECT D.TYPEDAYID
                             FROM WORKCALENDARS     W,
                                  DAYSWORKCALENDARS D
                            WHERE D.WORKCALENDARSID = W.ID
                              AND W.REGIONSRFID = SUBID --Российская Федерация
                              AND D.DATEWC = DD) AS STYPE
                     FROM GENERATE_SERIES(BDATE, EDATE, INTERVAL '1 day') AS DD
                     ORDER BY DD)
        LOOP
          FOR I IN 1 .. NCOUNT
          LOOP
            INSERT INTO WORKTBL (REGISTERLISTID, DATETBL, TYPEDAYID, NUMBCALDAY) VALUES (NID, RK.DD, RK.STYPE, J);
            J:=J+1;
          END LOOP;
        END LOOP;
        FOR RK IN (SELECT (SELECT W.ID
                             FROM WORKCALENDARS W
                            WHERE W.REGIONSRFID = SUBID
                              AND W.MONTH ::INTEGER = TO_CHAR(DD, 'mm') ::INTEGER
                              AND W.YEAR = TO_CHAR(DD, 'yyyy') ::INTEGER) AS WID
                     FROM GENERATE_SERIES(BDATE, EDATE, INTERVAL '1 month') AS DD)
        LOOP
          SELECT S.ID INTO COMID FROM SLCOMPCHARGES S WHERE LOWER(S.NAME) = LOWER(COMPIT); --находим id компенсации
          INSERT INTO PAYS (REGISTERLISTID, SLCOMPCHARGESID, WORKCALENDARSID) VALUES (NID, COMID, RK.WID);
        END LOOP;
      ELSE
      	J:=1;
        --Уровень региональный
        FOR RK IN (SELECT DD, --заполняем таблицу worktbl 
                          (SELECT CASE
                                    WHEN (SELECT COUNT(*)
                                            FROM WORKCALENDARS     W,
                                                 DAYSWORKCALENDARS D
                                           WHERE D.WORKCALENDARSID = W.ID
                                             AND W.REGIONSRFID = REC.REGION
                                             AND D.DATEWC = DD) > 0 THEN
                                     (SELECT D.TYPEDAYID
                                        FROM WORKCALENDARS     W,
                                             DAYSWORKCALENDARS D
                                       WHERE D.WORKCALENDARSID = W.ID
                                         AND W.REGIONSRFID = REC.REGION
                                         AND D.DATEWC = DD)
                                    ELSE
                                     (SELECT D.TYPEDAYID
                                        FROM WORKCALENDARS     W,
                                             DAYSWORKCALENDARS D
                                       WHERE D.WORKCALENDARSID = W.ID
                                         AND W.REGIONSRFID = SUBID --Российская Федерация
                                         AND D.DATEWC = DD)
                                  END) AS STYPE
                     FROM GENERATE_SERIES(BDATE, EDATE, INTERVAL '1 day') AS DD
                     ORDER BY DD)
        LOOP
          FOR I IN 1 .. NCOUNT
          LOOP
            INSERT INTO WORKTBL (REGISTERLISTID, DATETBL, TYPEDAYID, NUMBCALDAY) VALUES (NID, RK.DD, RK.STYPE, J);
            J:=J+1;
          END LOOP;
        END LOOP;
        FOR RK IN (SELECT (SELECT CASE
                                    WHEN (SELECT COUNT(*)
                                            FROM WORKCALENDARS W
                                           WHERE W.REGIONSRFID = REC.REGION
                                             AND W.MONTH ::INTEGER = TO_CHAR(DD, 'mm') ::INTEGER
                                             AND W.YEAR = TO_CHAR(DD, 'yyyy') ::INTEGER) > 0 THEN
                                     (SELECT W.ID
                                        FROM WORKCALENDARS W
                                       WHERE W.REGIONSRFID = REC.REGION
                                         AND W.MONTH ::INTEGER = TO_CHAR(DD, 'mm') ::INTEGER
                                         AND W.YEAR = TO_CHAR(DD, 'yyyy') ::INTEGER)
                                    ELSE
                                     (SELECT W.ID
                                        FROM WORKCALENDARS W
                                       WHERE W.REGIONSRFID = SUBID
                                         AND W.MONTH ::INTEGER = TO_CHAR(DD, 'mm') ::INTEGER
                                         AND W.YEAR = TO_CHAR(DD, 'yyyy') ::INTEGER)
                                  END) AS WID
                     FROM GENERATE_SERIES(BDATE, EDATE + INTERVAL '1 MONTH - 1 DAY', INTERVAL '1 month') AS DD)
        LOOP
          SELECT S.ID INTO COMID FROM SLCOMPCHARGES S WHERE LOWER(S.NAME) = LOWER(COMPIT); --находим id компенсации
          INSERT INTO PAYS (REGISTERLISTID, SLCOMPCHARGESID, WORKCALENDARSID) VALUES (NID, COMID, RK.WID);
        END LOOP;
      END IF;
    
      INSERT INTO PAYS
        (REGISTERLISTID, SLCOMPCHARGESID)
        SELECT NID,
               S.ID
          FROM SLCOMPCHARGES S
         WHERE LOWER(TRIM(S.CODE)) IN
               ('дот в одинарном размере', 'дот в двойном размере', 'начислено дот за фов', 'дот за активную работу', 'всего');
    END LOOP;
    --заполняем "сведения о финансировании в зависимости от уровня избирательной компании"
    IF REC.LEVEL = 'REGION' THEN
      --Уровень избирательной коммисии региональная
      FOR RK IN (SELECT T.ID
                   FROM TYPEEXP T
                  WHERE T.MESTIMATE = TRUE
                    AND T.REGIONSRFID = REC.REGION)
      LOOP
        --Проверяем есть ли записи в таблице.
        IF (SELECT COUNT(*)
              FROM FINEXP S
             WHERE S.TYPEEXPID = RK.ID
               AND S.ELECTCOMMINCAMPID = REC.ID) = 0 THEN
          INSERT INTO FINEXP (TYPEEXPID, ELECTCOMMINCAMPID) VALUES (RK.ID, REC.ID);
        END IF;
      END LOOP;
    ELSIF REC.LEVEL = 'CENTRAL' THEN
      --Федеральная
      FOR RK IN (SELECT T.ID,
                        REC.ID
                   FROM TYPEEXP T
                  WHERE T.MESTIMATE = TRUE
                    AND T.REGIONSRFID = SUBID)
      LOOP
        IF (SELECT COUNT(*)
              FROM FINEXP S
             WHERE S.TYPEEXPID = RK.ID
               AND S.ELECTCOMMINCAMPID = REC.ID) = 0 THEN
          INSERT INTO FINEXP (TYPEEXPID, ELECTCOMMINCAMPID) VALUES (RK.ID, REC.ID);
        END IF;
      END LOOP;
    END IF;
  
  END LOOP;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;

ALTER FUNCTION public.p_action_electcommincamp_gen (begindate date, enddate date, leveldcchairman text, ncount integer, printreport boolean, idlist text)
  OWNER TO magicbox;
 CREATE  OR  REPLACE  FUNCTION  public.p_action_electcommincamp_gen(begindate  date,  enddate  date,  leveldcchairman  text,  ncount  integer,  printreport  boolean,  idlist  text)
  RETURNS  void
  LANGUAGE  plpgsql
AS  $function$
/*Действие:  Сформировать  комплекты  расчетных  форм*/
declare
    BDATE    date  :=  BEGINDATE;  --неоднозначная  ссылка
    EDATE    date  :=  ENDDATE;  --неоднозначная  ссылка
    REC        record;
    IZ          record;
    RK          record;
    STEMP    TEXT;
    NID        BIGINT;
    COMPIT  TEXT  :=  'Компенсация';  --таблица  pays  всегда  компенсация
    COMID    BIGINT;
    REGID    BIGINT;
    SUBID    BIGINT;  --ID  субъекта  РФ
    TDOC      BIGINT;
    TIK        TEXT  :=  'territory';  --код  ТИК  в  системе
    IKMO      TEXT  :=  'circuit';  --код  ИКМО
    J            integer  :=  1;
begin
                                                                                                        --ПЕРЕДЕЛАТЬ  ↓
    select  R.ID  into  SUBID  from  REGIONSRF  R  where  R.IDGASREGIONSRF  =  '00';    --Российская  Федерация
    
    if  NCOUNT  not  in  (1,  2)  then
        raise
            using  MESSAGE  =  'Количество  строк  для  одного  календарного  дня  может  принимать  значение  1  или  2.  Введите  одно  из  значений.';
    end  if;
    for  REC  in  (select  S.*,
                                          LOWER(IK.LEVELELCOMMITTEE)  as  LEVELCOM,
                                          I.BEGINDATE,
                                          I.ENDDATE,
                                          I.BEGINDATETER,
                                          I.ENDDATETER,
                                          UPPER(I.LEVELELCAMPAIGN)  as  level,
                                          IK.REGIONSRFID  as  REGION,
                                          I.ELECTDATE
                                from  ELECTCOMMINCAMP  S,
                                          ELECTCAMPAIGN      I,
                                          ELECTCOMMITTEE    IK
                              where  S.ID  =  any(P_SYSTEM_GET_SELECTLIST(IDLIST))
                                  and  I.ID  =  S.ELECTCAMPAIGNID
                                  and  IK.ID  =  S.ELECTCOMMITTEEID)
    loop
                                                                                                  --ПЕРЕДЕЛАТЬ  ↓
        select  S.ID  into  TDOC  from  DOCTYPES  S  where  LOWER(S.CODE)  =  'комплект  расчетных  форм';
    
        --Проверки
        if  (select  count(*)
                    from  REGISTER  S
                  where  S.ELECTCOMMINCAMPID  =  REC.ID
                      and  S.DOCTYPEID  =  TDOC
                      and  (BDATE  between  S.BEGINDATE  and  S.ENDDATE  or  EDATE  between  S.BEGINDATE  and  S.ENDDATE))  >  0  then
            raise
                using  MESSAGE  =  'На  периоде  '  ||  TO_CHAR(BDATE,  'dd.mm.yyyy')  ||  '  -  '  ||  TO_CHAR(EDATE,  'dd.mm.yyyy')  ||  '  сформирован  комплект  расчетных  форм!';
        end  if;
        if  (REC.LEVELCOM  =  TIK  or  REC.LEVELCOM  =  IKMO)  and  REC.MTERELCOM  then
            if  REC.BEGINDATETER  >  BDATE  or  REC.BEGINDATETER  >  EDATE  or  REC.ENDDATETER  <  BDATE  or  REC.ENDDATETER  <  EDATE  then
                raise
                    using  MESSAGE  =  'Неверно  указан  период  работы  членов  избирательной  комиссии.  Для  избирательной  кампании  период  работы  членов  установлен  c  '  ||  TO_CHAR(REC.BEGINDATETER,  'dd.mm.yyyy')  ||  '  по  '  ||  D2S(REC.ENDDATETER);
            elsif  REC.BEGINDATETER  is  null  or  REC.ENDDATETER  is  null  then
                raise
                    using  MESSAGE  =  'Не  задан  период  работы  ТИК  в  избирательных  кампаниях!';
            end  if;
        else
            if  REC.BEGINDATE  >  BDATE  or  REC.BEGINDATE  >  EDATE  or  REC.ENDDATE  <  BDATE  or  REC.ENDDATE  <  EDATE  then
                raise
                    using  MESSAGE  =  'Неверно  указан  период  работы  членов  избирательной  комиссии.  Для  избирательной  кампании  период  работы  членов  установлен  c  '  ||  TO_CHAR(REC.BEGINDATE,  'dd.mm.yyyy')  ||  '  по  '  ||  D2S(REC.ENDDATE);
            end  if;
        end  if;
        --Проверка  по  событию  МАЦ-4011
        --1.  Дата  окончания  действия  полномочий  не  задана
        if  exists  (select  1
                    from  ELECTCOMMITTEE  X
                  where  X.ID  =  REC.ELECTCOMMITTEEID
                      and  X.POSTENDDATE  is  null)  then
            raise
                using  MESSAGE  =  'Формирование  комплекта  расчетных  форм  запрещено.  Не  задана  дата  окончания  действия  полномочий.';
        end  if;
        --2.  Дата  окончания  действия  полномочий  меньше  даты  голосования
        if  exists  (select  1
                    from  ELECTCOMMITTEE  X
                  where  X.ID  =  REC.ELECTCOMMITTEEID
                      and  X.POSTENDDATE  <  REC.ELECTDATE)  then
            raise
                using  MESSAGE  =  'Формирование  комплекта  расчетных  форм  запрещено.  Полномочия  комиссии  на  день  голосования  прекращены.';
        end  if;
        --3.  Дата  начала  действия  полномочий  больше  даты  голосования  
        if  exists  (select  1
                    from  ELECTCOMMITTEE  X
                  where  X.ID  =  REC.ELECTCOMMITTEEID
                      and  X.POSTBEGINDATE  >  REC.ELECTDATE)  then
            raise
                using  MESSAGE  =  'Формирование  комплекта  расчетных  форм  запрещено.  Полномочия  комиссии  на  день  голосования  не  установлены.';
        end  if;
    
        STEMP  :=  TDOC  ||  '_'  ||  --Код  избирательного  участка
                          (select  COALESCE(TO_CHAR(X.ELECTDATE,  'dd.mm.yyyy'),  '')  from  ELECTCAMPAIGN  X  where  X.ID  =  REC.ELECTCAMPAIGNID)  ||  '_';
        update  ELECTCOMMINCAMP  S  set  MSREGISTER  =  COALESCE(MSREGISTER,  0)  +  1  where  S.ID  =  REC.ID;  --апдейтим  КОД
    
        insert  into  REGISTER
            (CODE,  DOCTYPEID,  STATUS,  ELECTCAMPAIGNID,  BEGINDATE,  ENDDATE,  ELECTCOMMINCAMPID,  DATELOADTBL,  RESPONSPERSID,  PRINTREPORT)
            select  STEMP,
                          TDOC,
                          1,
                          REC.ELECTCAMPAIGNID,
                          BDATE,
                          EDATE,
                          REC.ID,
                          null,
                          null,
                          PRINTREPORT  returning  ID
                into  REGID;
        update  REGISTER  S  set  CODE  =  CODE  ||  REGID  where  S.ID  =  REGID;
        for  IZ  in  (select  R.CODE,
                                            R.ID,
                                            R.POSTSID,
                                            R.PERSONID,
                                            case
                                                when  D.POSTPRINT  ILIKE  'CHAIRMAN'  then
                                                  LEVELDCCHAIRMAN
                                            end  as  LVLCH
                                  from  ELECTCOMMITTEE  X,
                                            COMMITTEEMAN      R,
                                            POSTS                    D
                                where  X.ID  =  REC.ELECTCOMMITTEEID
                                    and  R.ELECTCOMMITTEEID  =  X.ID
                                    and  D.ID  =  R.POSTSID
                                    and  ((BDATE  between  R.POSTBEGINDATE  and  R.POSTENDDATE  or  EDATE  between  R.POSTBEGINDATE  and  R.POSTENDDATE)  or
                                            (BDATE  between  R.POSTBEGINDATE  and  R.POSTENDDATE  and  EDATE  between  R.POSTBEGINDATE  and  R.POSTENDDATE)  or
                                            (R.POSTBEGINDATE  between  BDATE  and  EDATE  and  R.POSTENDDATE  between  BDATE  and  EDATE)))
        loop
            --Наполняем  таблицу  "члены  избирательных  комиссий"
            insert  into  REGISTERLIST
                (REGISTERID,  CODE,  COMMITTEEMANID,  MIDDLESALARY,  DEPCOEFF,  LEVELDCCHAIRMAN)
                select  REGID,
                              IZ.CODE,
                              IZ.ID,
                              (select  P.VALUE
                                    from  PERSON              S,
                                              PERSONSAVSLR  P
                                  where  S.ID  =  IZ.PERSONID
                                      and  P.PERSONID  =  S.ID
                                      and  P.ELECTCAMPAIGNID  =  REC.ELECTCAMPAIGNID  limit  1),
                              0,
                              IZ.LVLCH  returning  ID
                    into  NID;
            if  (select  S.LEVELELCAMPAIGN  from  ELECTCAMPAIGN  S  where  S.ID  =  REC.ELECTCAMPAIGNID)  =  'central'  then
                J  :=  1;
                --Уровень  федеральный  
                for  RK  in  (select  DD,  --заполняем  таблицу  worktbl  
                                                    (select  D.TYPEDAYID
                                                          from  WORKCALENDARS          W,
                                                                    DAYSWORKCALENDARS  D
                                                        where  D.WORKCALENDARSID  =  W.ID
                                                            and  W.REGIONSRFID  =  SUBID  --Российская  Федерация
                                                            and  D.DATEWC  =  DD)  as  STYPE
                                          from  GENERATE_SERIES(BDATE,  EDATE,  interval  '1  day')  as  DD
                                        order  by  DD)
                loop
                    for  I  in  1  ..  NCOUNT
                    loop
                        insert  into  WORKTBL  (REGISTERLISTID,  DATETBL,  TYPEDAYID,  NUMBCALDAY)  values  (NID,  RK.DD,  RK.STYPE,  J);
                        J  :=  J  +  1;
                    end  loop;
                end  loop;
                for  RK  in  (select  (select  W.ID
                                                          from  WORKCALENDARS  W
                                                        where  W.REGIONSRFID  =  SUBID
                                                            and  W.MONTH  ::integer  =  TO_CHAR(DD,  'mm')  ::integer
                                                            and  W.YEAR  =  TO_CHAR(DD,  'yyyy')  ::integer)  as  WID
                                          from  GENERATE_SERIES(BDATE,  DATE_TRUNC('month',  EDATE)  +  interval  '1  MONTH  -  1  DAY',  interval  '1  month')  as  DD)
                loop
                    select  S.ID  into  COMID  from  SLCOMPCHARGES  S  where  LOWER(S.NAME)  =  LOWER(COMPIT);  --находим  id  компенсации
                    insert  into  PAYS  (REGISTERLISTID,  SLCOMPCHARGESID,  WORKCALENDARSID)  values  (NID,  COMID,  RK.WID);
                end  loop;
            else
                J  :=  1;
                --Уровень  региональный
                for  RK  in  (select  DD,  --заполняем  таблицу  worktbl  
                                                    (select  case
                                                                        when  (select  count(*)
                                                                                        from  WORKCALENDARS          W,
                                                                                                  DAYSWORKCALENDARS  D
                                                                                      where  D.WORKCALENDARSID  =  W.ID
                                                                                          and  W.REGIONSRFID  =  REC.REGION
                                                                                          and  D.DATEWC  =  DD)  >  0  then
                                                                          (select  D.TYPEDAYID
                                                                                from  WORKCALENDARS          W,
                                                                                          DAYSWORKCALENDARS  D
                                                                              where  D.WORKCALENDARSID  =  W.ID
                                                                                  and  W.REGIONSRFID  =  REC.REGION
                                                                                  and  D.DATEWC  =  DD)
                                                                        else
                                                                          (select  D.TYPEDAYID
                                                                                from  WORKCALENDARS          W,
                                                                                          DAYSWORKCALENDARS  D
                                                                              where  D.WORKCALENDARSID  =  W.ID
                                                                                  and  W.REGIONSRFID  =  SUBID  --Российская  Федерация
                                                                                  and  D.DATEWC  =  DD)
                                                                    end)  as  STYPE
                                          from  GENERATE_SERIES(BDATE,  EDATE,  interval  '1  day')  as  DD
                                        order  by  DD)
                loop
                    for  I  in  1  ..  NCOUNT
                    loop
                        insert  into  WORKTBL  (REGISTERLISTID,  DATETBL,  TYPEDAYID,  NUMBCALDAY)  values  (NID,  RK.DD,  RK.STYPE,  J);
                        J  :=  J  +  1;
                    end  loop;
                end  loop;
                for  RK  in  (select  (select  case
                                                                        when  (select  count(*)
                                                                                        from  WORKCALENDARS  W
                                                                                      where  W.REGIONSRFID  =  REC.REGION
                                                                                          and  W.MONTH  ::integer  =  TO_CHAR(DD,  'mm')  ::integer
                                                                                          and  W.YEAR  =  TO_CHAR(DD,  'yyyy')  ::integer)  >  0  then
                                                                          (select  W.ID
                                                                                from  WORKCALENDARS  W
                                                                              where  W.REGIONSRFID  =  REC.REGION
                                                                                  and  W.MONTH  ::integer  =  TO_CHAR(DD,  'mm')  ::integer
                                                                                  and  W.YEAR  =  TO_CHAR(DD,  'yyyy')  ::integer)
                                                                        else
                                                                          (select  W.ID
                                                                                from  WORKCALENDARS  W
                                                                              where  W.REGIONSRFID  =  SUBID
                                                                                  and  W.MONTH  ::integer  =  TO_CHAR(DD,  'mm')  ::integer
                                                                                  and  W.YEAR  =  TO_CHAR(DD,  'yyyy')  ::integer)
                                                                    end)  as  WID
                                          from  GENERATE_SERIES(BDATE,  DATE_TRUNC('month',  EDATE)  +  interval  '1  MONTH  -  1  DAY',  interval  '1  month')  as  DD)
                loop
                    select  S.ID  into  COMID  from  SLCOMPCHARGES  S  where  LOWER(S.NAME)  =  LOWER(COMPIT);  --находим  id  компенсации
                    insert  into  PAYS  (REGISTERLISTID,  SLCOMPCHARGESID,  WORKCALENDARSID)  values  (NID,  COMID,  RK.WID);
                end  loop;
            end  if;
        
            insert  into  PAYS
                (REGISTERLISTID,  SLCOMPCHARGESID)
                select  NID,
                              S.ID
                    from  SLCOMPCHARGES  S
                  where  UPPER(trim(S.DESCRIPTION))  in  ('EXTRA1',  'EXTRA2',  'SUMEXTRA12',  'EXTRAA',  'SUMALL');
        end  loop;
        --заполняем  "сведения  о  финансировании  в  зависимости  от  уровня  избирательной  компании"
        if  REC.LEVEL  =  'REGION'  then
            --Уровень  избирательной  коммисии  региональная
            for  RK  in  (select  T.ID
                                      from  TYPEEXP  T
                                    where  T.MESTIMATE  =  true
                                        and  T.REGIONSRFID  =  REC.REGION)
            loop
                --Проверяем  есть  ли  записи  в  таблице.
                if  (select  count(*)
                            from  FINEXP  S
                          where  S.TYPEEXPID  =  RK.ID
                              and  S.ELECTCOMMINCAMPID  =  REC.ID)  =  0  then
                    insert  into  FINEXP  (TYPEEXPID,  ELECTCOMMINCAMPID)  values  (RK.ID,  REC.ID);
                end  if;
            end  loop;
        elsif  REC.LEVEL  =  'CENTRAL'  then
            --Федеральная
            for  RK  in  (select  T.ID,
                                                REC.ID
                                      from  TYPEEXP  T
                                    where  T.MESTIMATE  =  true
                                        and  T.REGIONSRFID  =  SUBID)
            loop
                if  (select  count(*)
                            from  FINEXP  S
                          where  S.TYPEEXPID  =  RK.ID
                              and  S.ELECTCOMMINCAMPID  =  REC.ID)  =  0  then
                    insert  into  FINEXP  (TYPEEXPID,  ELECTCOMMINCAMPID)  values  (RK.ID,  REC.ID);
                end  if;
            end  loop;
        end  if;
    end  loop;
end;
$function$
 

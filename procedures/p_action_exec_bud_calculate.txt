CREATE OR REPLACE FUNCTION public.p_action_exec_bud_calculate (
  idlist text,
  uid bigint
)
RETURNS void AS
$body$
 declare
   rec record;
   ser record;
   sql text;
   nUID bigint:=UID;
   nLID bigint;
   nEXEC_BUDID bigint;
   nEXEC_BUD_KBRID bigint;
   nEXEC_BUD_DETAILID bigint;
   fl boolean;
 begin
   perform p_action_exec_bud_clear_indicators(idlist, false);
   --проверим права доступа
   nLID:=P_SYSTEM_GEN_LID('EXEC_BUD_KBR',nUID);
   nLID:=P_SYSTEM_GEN_LID('EXEC_BUD_DETAIL',nUID);
   --
   for rec in (
       select e.ID,
              j.KBR_ID,
              
              case when not e.DEPART_L then null else j.DEPART_ID end as DEPART_ID, 
              case when not e.DEPART_L_KOM then null else j.DEPART_KOM_ID end as DEPART_KOM_ID,
              case when not e.ECON_CLASS_L then null else j.ECON_CLASS_ID end as ECON_CLASS_ID,
              case when not e.SUBSIDIES_L then null else j.SUBSIDIES_ID end as SUBSIDIES_ID, 
              case when not e.CAPOBJECTS_L then null else j.CAPOBJECTS_ID end as CAPOBJECTS_ID,
              case when not e.EVENT_L then null else j.EVENT_ID end as EVENT_ID,     
              case when not e.ACODES_L then null else j.ACODES_ID end as ACODES_ID,    
              case when not e.DEPART5_L then null else j.DEPART5_ID end as DEPART5_ID,  
               
              e.DEPART_L,
              e.DEPART_L_KOM,
              e.ECON_CLASS_L,
              e.SUBSIDIES_L,
              e.CAPOBJECTS_L,
              e.EVENT_L,
              e.ACODES_L,
              e.DEPART5_L,
              (SELECT R.RECORD_TYPE FROM RECORD_TYPES R WHERE R.ID = j.RECORD_TYPESID) as RECORD_TYPE,
              j.SUM,
              j.ID as JURNALEXPID,
              e.LID 
         from EXEC_BUD e,
              JURNALEXP j
        where e.id = ANY(p_system_get_selectlist(IDLIST))
          and j.budgets_id = e.budgets_id
          and j.year_u = e.year_u
          and j.exec_bud_kbrid is NULL
          and j.exec_bud_detailid is NULL
        order by RECORD_TYPE
   )
   loop
     --осуществим поиск КБК в "Исполнение бюджета: КБК", если нет, то добавим.
     begin
        select e.ID, e.EXEC_BUDID
          into STRICT nEXEC_BUD_KBRID, nEXEC_BUDID
          from EXEC_BUD_KBR e
         where e.EXEC_BUDID = rec.ID
           and e.KBR_ID = rec.KBR_ID;
     exception when no_data_found THEN
        insert INTO EXEC_BUD_KBR(UID, LID, EXEC_BUDID,KBR_ID)
                          values(nUID, rec.LID, rec.ID, rec.KBR_ID) 
                          returning EXEC_BUD_KBR.ID into nEXEC_BUD_KBRID;
     end;  
     --осуществим поиск КБК в "Исполнение бюджета: Детализация", если нет, то добавим.
     sql:='select e.ID
             from EXEC_BUD_DETAIL e
            where e.EXEC_BUD_KBRID = '||nEXEC_BUD_KBRID||'
             ';
     if rec.DEPART_L THEN
        sql:=sql||'and (e.DEPART_ID = '||COALESCE(rec.DEPART_ID,0)||' or e.DEPART_ID is null and '||COALESCE(rec.DEPART_ID,0)||' = 0)'||chr(10);
     end if;
     if rec.DEPART_L_KOM THEN
        sql:=sql||'and (e.DEPART_KOM_ID = '||COALESCE(rec.DEPART_KOM_ID,0)||' or e.DEPART_KOM_ID is null and '||COALESCE(rec.DEPART_KOM_ID,0)||' = 0)'||chr(10);
     end if;
     if rec.ECON_CLASS_L THEN
        sql:=sql||'and (e.ECON_CLASS_ID = '||COALESCE(rec.ECON_CLASS_ID,0)||' or e.ECON_CLASS_ID is null and '||COALESCE(rec.ECON_CLASS_ID,0)||' = 0)'||chr(10);
     end if;
     if rec.SUBSIDIES_L THEN
        sql:=sql||'and (e.SUBSIDIES_ID = '||COALESCE(rec.SUBSIDIES_ID,0)||' or e.SUBSIDIES_ID is null and '||COALESCE(rec.SUBSIDIES_ID,0)||' = 0)'||chr(10);
     end if;
     if rec.CAPOBJECTS_L THEN
        sql:=sql||'and (e.CAPOBJECTS_ID = '||COALESCE(rec.CAPOBJECTS_ID,0)||' or e.CAPOBJECTS_ID is null and '||COALESCE(rec.CAPOBJECTS_ID,0)||' = 0)'||chr(10);
     end if;
     if rec.EVENT_L THEN
        sql:=sql||'and (e.EVENT_ID = '||COALESCE(rec.EVENT_ID,0)||' or e.EVENT_ID is null and '||COALESCE(rec.EVENT_ID,0)||' = 0)'||chr(10);
     end if;
     if rec.ACODES_L THEN
        sql:=sql||'and (e.ACODES_ID = '||COALESCE(rec.ACODES_ID,0)||' or e.ACODES_ID is null and '||COALESCE(rec.ACODES_ID,0)||' = 0)'||chr(10);
     end if;
     if rec.DEPART5_L THEN
        sql:=sql||'and (e.DEPART5_ID = '||COALESCE(rec.DEPART5_ID,0)||' or e.DEPART5_ID is null and '||COALESCE(rec.DEPART5_ID,0)||' = 0)'||chr(10);
     end if;
     
     fl:=FALSE;
   --  begin
     for ser in execute sql loop nEXEC_BUD_DETAILID:=ser.id; fl:=true; end loop;
   --  exception when others then raise using message = sql;
   --  end;
     
     if not fl THEN
        insert into EXEC_BUD_DETAIL(UID,LID,CODE,EXEC_BUD_KBRID,DEPART_ID,DEPART_KOM_ID,ECON_CLASS_ID,SUBSIDIES_ID,CAPOBJECTS_ID,EVENT_ID,ACODES_ID,DEPART5_ID)
                             values(nUID,rec.LID,p_action_exec_bud_detail_fill_code(nEXEC_BUD_KBRID,rec.DEPART_ID,rec.DEPART_KOM_ID,rec.ECON_CLASS_ID,rec.SUBSIDIES_ID,rec.CAPOBJECTS_ID,rec.EVENT_ID,rec.ACODES_ID,rec.DEPART5_ID)
                             ,nEXEC_BUD_KBRID,rec.DEPART_ID,rec.DEPART_KOM_ID,rec.ECON_CLASS_ID,rec.SUBSIDIES_ID,rec.CAPOBJECTS_ID,rec.EVENT_ID,rec.ACODES_ID,rec.DEPART5_ID)
                         returning EXEC_BUD_DETAIL.ID into nEXEC_BUD_DETAILID;
     end if;
     update JURNALEXP j set exec_bud_kbrid = nEXEC_BUD_KBRID, exec_bud_detailid = nEXEC_BUD_DETAILID where j.ID = rec.JURNALEXPID;
     if rec.RECORD_TYPE ilike 'IN_BA' then                
         UPDATE EXEC_BUD_DETAIL e set SUM_IN_BA = COALESCE(e.SUM_IN_BA,0) + rec.SUM where e.ID = nEXEC_BUD_DETAILID;  
         UPDATE EXEC_BUD_KBR e set SUM_IN_BA = COALESCE(e.SUM_IN_BA,0) + rec.SUM where e.ID = nEXEC_BUD_KBRID;  
         UPDATE EXEC_BUD e set SUM_IN_BA = COALESCE(e.SUM_IN_BA,0) + rec.SUM where e.ID = nEXEC_BUDID;      
     elsif rec.RECORD_TYPE ilike 'IN_LBO' then            
         UPDATE EXEC_BUD_DETAIL e set SUM_IN_LBO = COALESCE(e.SUM_IN_LBO,0) + rec.SUM where e.ID = nEXEC_BUD_DETAILID;
         UPDATE EXEC_BUD_KBR e set SUM_IN_LBO = COALESCE(e.SUM_IN_LBO,0) + rec.SUM where e.ID = nEXEC_BUD_KBRID;   
         UPDATE EXEC_BUD e set SUM_IN_LBO = COALESCE(e.SUM_IN_LBO,0) + rec.SUM where e.ID = nEXEC_BUDID;      
     elsif rec.RECORD_TYPE ilike 'SEP_LBO' then           
         UPDATE EXEC_BUD_DETAIL e set SUM_SEP_LBO = COALESCE(e.SUM_SEP_LBO,0) + rec.SUM where e.ID = nEXEC_BUD_DETAILID; 
         UPDATE EXEC_BUD_KBR e set SUM_SEP_LBO = COALESCE(e.SUM_SEP_LBO,0) + rec.SUM where e.ID = nEXEC_BUD_KBRID;   
         UPDATE EXEC_BUD e set SUM_SEP_LBO = COALESCE(e.SUM_SEP_LBO,0) + rec.SUM where e.ID = nEXEC_BUDID;    
     elsif rec.RECORD_TYPE ilike 'COR_LBO' then           
         UPDATE EXEC_BUD_DETAIL e set SUM_COR_LBO = COALESCE(e.SUM_COR_LBO,0) + rec.SUM where e.ID = nEXEC_BUD_DETAILID; 
         UPDATE EXEC_BUD_KBR e set SUM_COR_LBO = COALESCE(e.SUM_COR_LBO,0) + rec.SUM where e.ID = nEXEC_BUD_KBRID;   
         UPDATE EXEC_BUD e set SUM_COR_LBO = COALESCE(e.SUM_COR_LBO,0) + rec.SUM where e.ID = nEXEC_BUDID;   
     elsif rec.RECORD_TYPE ilike 'SEP_BA' then            
         UPDATE EXEC_BUD_DETAIL e set SUM_SEP_BA = COALESCE(e.SUM_SEP_BA,0) + rec.SUM where e.ID = nEXEC_BUD_DETAILID; 
         UPDATE EXEC_BUD_KBR e set SUM_SEP_BA = COALESCE(e.SUM_SEP_BA,0) + rec.SUM where e.ID = nEXEC_BUD_KBRID;  
         UPDATE EXEC_BUD e set SUM_SEP_BA = COALESCE(e.SUM_SEP_BA,0) + rec.SUM where e.ID = nEXEC_BUDID;      
     elsif rec.RECORD_TYPE ilike 'COR_BA' then            
         UPDATE EXEC_BUD_DETAIL e set SUM_COR_BA = COALESCE(e.SUM_COR_BA,0) + rec.SUM where e.ID = nEXEC_BUD_DETAILID; 
         UPDATE EXEC_BUD_KBR e set SUM_COR_BA = COALESCE(e.SUM_COR_BA,0) + rec.SUM where e.ID = nEXEC_BUD_KBRID; 
         UPDATE EXEC_BUD e set SUM_COR_BA = COALESCE(e.SUM_COR_BA,0) + rec.SUM where e.ID = nEXEC_BUDID;                           
     elsif rec.RECORD_TYPE ilike 'OUTIN_LBO' then         
         UPDATE EXEC_BUD_DETAIL e set SUM_OUTIN_LBO = COALESCE(e.SUM_OUTIN_LBO,0) + rec.SUM where e.ID = nEXEC_BUD_DETAILID;
         UPDATE EXEC_BUD_KBR e set SUM_OUTIN_LBO = COALESCE(e.SUM_OUTIN_LBO,0) + rec.SUM where e.ID = nEXEC_BUD_KBRID;   
         UPDATE EXEC_BUD e set SUM_OUTIN_LBO = COALESCE(e.SUM_OUTIN_LBO,0) + rec.SUM where e.ID = nEXEC_BUDID;                     
     elsif rec.RECORD_TYPE ilike 'OUT03_LBO' then       
         UPDATE EXEC_BUD_DETAIL e set SUM_OUT03_LBO = COALESCE(e.SUM_OUT03_LBO,0) + rec.SUM where e.ID = nEXEC_BUD_DETAILID; 
         UPDATE EXEC_BUD_KBR e set SUM_OUT03_LBO = COALESCE(e.SUM_OUT03_LBO,0) + rec.SUM where e.ID = nEXEC_BUD_KBRID; 
         UPDATE EXEC_BUD e set SUM_OUT03_LBO = COALESCE(e.SUM_OUT03_LBO,0) + rec.SUM where e.ID = nEXEC_BUDID;                        
     elsif rec.RECORD_TYPE ilike 'OUT14_LBO' then         
         UPDATE EXEC_BUD_DETAIL e set SUM_OUT14_LBO = COALESCE(e.SUM_OUT14_LBO,0) + rec.SUM where e.ID = nEXEC_BUD_DETAILID; 
         UPDATE EXEC_BUD_KBR e set SUM_OUT14_LBO = COALESCE(e.SUM_OUT14_LBO,0) + rec.SUM where e.ID = nEXEC_BUD_KBRID;  
         UPDATE EXEC_BUD e set SUM_OUT14_LBO = COALESCE(e.SUM_OUT14_LBO,0) + rec.SUM where e.ID = nEXEC_BUDID;                     
     elsif rec.RECORD_TYPE ilike 'OUTIN_BA' then          
         UPDATE EXEC_BUD_DETAIL e set SUM_OUTIN_BA = COALESCE(e.SUM_OUTIN_BA,0) + rec.SUM where e.ID = nEXEC_BUD_DETAILID;  
         UPDATE EXEC_BUD_KBR e set SUM_OUTIN_BA = COALESCE(e.SUM_OUTIN_BA,0) + rec.SUM where e.ID = nEXEC_BUD_KBRID;   
         UPDATE EXEC_BUD e set SUM_OUTIN_BA = COALESCE(e.SUM_OUTIN_BA,0) + rec.SUM where e.ID = nEXEC_BUDID;                       
     elsif rec.RECORD_TYPE ilike 'OUT03_BA' then          
         UPDATE EXEC_BUD_DETAIL e set SUM_OUT03_BA = COALESCE(e.SUM_OUT03_BA,0) + rec.SUM where e.ID = nEXEC_BUD_DETAILID;   
         UPDATE EXEC_BUD_KBR e set SUM_OUT03_BA = COALESCE(e.SUM_OUT03_BA,0) + rec.SUM where e.ID = nEXEC_BUD_KBRID; 
         UPDATE EXEC_BUD e set SUM_OUT03_BA = COALESCE(e.SUM_OUT03_BA,0) + rec.SUM where e.ID = nEXEC_BUDID;                       
     elsif rec.RECORD_TYPE ilike 'OUT14_BA' then          
         UPDATE EXEC_BUD_DETAIL e set SUM_OUT14_BA = COALESCE(e.SUM_OUT14_BA,0) + rec.SUM where e.ID = nEXEC_BUD_DETAILID;   
         UPDATE EXEC_BUD_KBR e set SUM_OUT14_BA = COALESCE(e.SUM_OUT14_BA,0) + rec.SUM where e.ID = nEXEC_BUD_KBRID;
         UPDATE EXEC_BUD e set SUM_OUT14_BA = COALESCE(e.SUM_OUT14_BA,0) + rec.SUM where e.ID = nEXEC_BUDID;                         
     elsif rec.RECORD_TYPE ilike 'NEED' then 
         UPDATE EXEC_BUD_DETAIL e set SUM_NEED = COALESCE(e.SUM_NEED,0) + rec.SUM where e.ID = nEXEC_BUD_DETAILID;
         UPDATE EXEC_BUD_KBR e set SUM_NEED = COALESCE(e.SUM_NEED,0) + rec.SUM where e.ID = nEXEC_BUD_KBRID;
         UPDATE EXEC_BUD e set SUM_NEED = COALESCE(e.SUM_NEED,0) + rec.SUM where e.ID = nEXEC_BUDID;
     elsif rec.RECORD_TYPE ilike 'PLAN_OUT' then 
         UPDATE EXEC_BUD_DETAIL e set SUM_PLAN_OUT = COALESCE(e.SUM_PLAN_OUT,0) + rec.SUM where e.ID = nEXEC_BUD_DETAILID;
         UPDATE EXEC_BUD_KBR e set SUM_PLAN_OUT = COALESCE(e.SUM_PLAN_OUT,0) + rec.SUM where e.ID = nEXEC_BUD_KBRID;
         UPDATE EXEC_BUD e set SUM_PLAN_OUT = COALESCE(e.SUM_PLAN_OUT,0) + rec.SUM where e.ID = nEXEC_BUDID;
     elsif rec.RECORD_TYPE ilike 'PBO' then 
         UPDATE EXEC_BUD_DETAIL e set SUM_PBO = COALESCE(e.SUM_PBO,0) + rec.SUM where e.ID = nEXEC_BUD_DETAILID;
         UPDATE EXEC_BUD_KBR e set SUM_PBO = COALESCE(e.SUM_PBO,0) + rec.SUM where e.ID = nEXEC_BUD_KBRID;
         UPDATE EXEC_BUD e set SUM_PBO = COALESCE(e.SUM_PBO,0) + rec.SUM where e.ID = nEXEC_BUDID;
     elsif rec.RECORD_TYPE ilike 'BO' then 
         UPDATE EXEC_BUD_DETAIL e set SUM_BO =  COALESCE(e.SUM_BO,0) + rec.SUM where e.ID = nEXEC_BUD_DETAILID;
         UPDATE EXEC_BUD_KBR e set SUM_BO =  COALESCE(e.SUM_BO,0) + rec.SUM where e.ID = nEXEC_BUD_KBRID;
         UPDATE EXEC_BUD e set SUM_BO = COALESCE(e.SUM_BO,0) + rec.SUM where e.ID = nEXEC_BUDID;
     elsif rec.RECORD_TYPE ilike 'PDO' then 
         UPDATE EXEC_BUD_DETAIL e set SUM_PDO = COALESCE(e.SUM_PDO,0) + rec.SUM where e.ID = nEXEC_BUD_DETAILID;
         UPDATE EXEC_BUD_KBR e set SUM_PDO = COALESCE(e.SUM_PDO,0) + rec.SUM where e.ID = nEXEC_BUD_KBRID;
         UPDATE EXEC_BUD e set SUM_PDO = COALESCE(e.SUM_PDO,0) + rec.SUM where e.ID = nEXEC_BUDID;
     elsif rec.RECORD_TYPE ilike 'KR' then                                                  
         UPDATE EXEC_BUD_DETAIL e set SUM_KR = COALESCE(e.SUM_KR,0) + rec.SUM where e.ID = nEXEC_BUD_DETAILID;
         UPDATE EXEC_BUD_KBR e set SUM_KR = COALESCE(e.SUM_KR,0) + rec.SUM where e.ID = nEXEC_BUD_KBRID;   
         UPDATE EXEC_BUD e set SUM_KR = COALESCE(e.SUM_KR,0) + rec.SUM where e.ID = nEXEC_BUDID;
     elsif rec.RECORD_TYPE ilike 'IN_POF' then
         UPDATE EXEC_BUD e set SUM_IN_POF = COALESCE(e.SUM_IN_POF,0) + rec.SUM where e.ID = nEXEC_BUDID;  
     elsif rec.RECORD_TYPE ilike 'OUT03_POF' then
         UPDATE EXEC_BUD e set SUM_OUT03_POF = COALESCE(e.SUM_OUT03_POF,0) + rec.SUM where e.ID = nEXEC_BUDID; 
     elsif rec.RECORD_TYPE ilike 'OUTIN_POF' then
         UPDATE EXEC_BUD e set SUM_OUTIN_POF = COALESCE(e.SUM_OUTIN_POF,0) + rec.SUM where e.ID = nEXEC_BUDID; 
     elsif rec.RECORD_TYPE ilike 'OUT14_POF' then
         UPDATE EXEC_BUD e set SUM_OUT14_POF = COALESCE(e.SUM_OUT14_POF,0) + rec.SUM where e.ID = nEXEC_BUDID;                
     end if;
     
   end loop;
 end;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;

ALTER FUNCTION public.p_action_exec_bud_calculate (idlist text, uid bigint)
  OWNER TO magicbox;
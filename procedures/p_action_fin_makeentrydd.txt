CREATE OR REPLACE FUNCTION public.p_action_fin_makeentrydd (
  idlist text,
  uid bigint
)
RETURNS void AS
$body$
/*Отработка документа из "Распределение бюджетных данных"*/
declare
  nUID  BIGINT:=UID;
  nLID  BIGINT:=P_SYSTEM_GEN_LID('JURNALEXP',nUID);
  RC    RECORD;
  JR    RECORD;
  DOC   RECORD;
  JURNALEXPID bigint;
  nTYPEID     bigint;
  nmEXPSHDID  bigint[];
  nEXPSHDID   bigint;
  tDOCNUMB    text;
  DDOCDATE    date;
  tDOCTYPE    text;
  
begin
  
 for RC in (
      select F.ID,
             F.BUDGETS_ID,
             F.YEAR_U,
             F.DOCNUMB,
             F.DOCDATE,
             F.NOTE
        from DISTRIBDATA f
       where f.ID = ANY(P_SYSTEM_GET_SELECTLIST(IDLIST))
  )
  LOOP
     
     select array_agg(e.id), e.NOM_RR, e.DATE_FORM_RR, 'Расходное расписание'
       INTO nmEXPSHDID, tDOCNUMB, DDOCDATE, tDOCTYPE
       from doclinks d,
            EXPSHD e
      where d.tablein ilike 'DISTRIBDATA'
        and d.keyin = RC.ID
        and d.tableout ilike 'EXPSHD'
        and e.id = d.keyout
      group by e.NOM_RR, e.DATE_FORM_RR;
        
     if TDOCNUMB is not null or DDOCDATE is not null or TDOCTYPE is not null THEN
        FOREACH nEXPSHDID in array nmEXPSHDID
        loop
          PERFORM p_action_fin_deleteentryrr(nEXPSHDID::text,nUID);
          PERFORM p_action_set_status('EXPSHD',nEXPSHDID::text,'1');
        end loop;
     end if;
     
     FOR JR IN (
         select COALESCE(da.SUM_BA,0) as sum_ba,
                COALESCE(da.SUM_LBO,0) as sum_lbo,
                COALESCE(da.SUM_POF,0) as sum_pof,
                b.ACCTYPE,
                dk.PLANNING_PERIOD::integer,
                k.KBR_ID,
                d.CAPOBJECTS_ID,
                dk.id as DISTRIBDATA_KBRID,
                da.id as DISTRIBDATA_AGENTID,
                da.AGENT_ACC_ID
           from DISTRIBDATA_KBR dk,
                DISTRIBDATA_AGENT da,
                AGENT_ACC ac,
                BANK_ACC_TYPES b,
                EXEC_BUD_KBR k,
                EXEC_BUD_DETAIL d
          where dk.DISTRIBDATAID = RC.ID
            and da.DISTRIBDATA_KBRID = dk.ID 
            and ac.ID = da.AGENT_ACC_ID
            and b.ID = ac.BANK_ACC_TYPES_ID
            and k.ID = dk.EXEC_BUD_KBRID
            and d.ID = dk.EXEC_BUD_DETAILID
     )
     LOOP
          
         if JR.SUM_BA > 0 then
          select r.ID
            into nTYPEID
            from record_types r
           where r.record_type ilike (select case upper(JR.ACCTYPE)
                                              when 'IN' then 'OUTIN_BA'
                                              when '14' then 'OUT14_BA'
                                             else 'OUT03_BA' end);
           insert into JURNALEXP(UID,LID,RECORD_TYPESID,RECORD_DATE,BUDGETS_ID,YEAR_U,KBR_ID,DOCTYPEP,DOCNUMBP,DOCDATEP,SUM,NOTE,CAPOBJECTS_ID,AGENT_ACC_ID,DOCTYPE,DOCNUMB,DOCDATE)
           values(nUID,nLID,nTYPEID,RC.DOCDATE,RC.BUDGETS_ID,RC.YEAR_U+JR.PLANNING_PERIOD,JR.KBR_ID,'Распределение бюджетных данных',RC.DOCNUMB,RC.DOCDATE,JR.SUM_BA,RC.NOTE,JR.CAPOBJECTS_ID,JR.AGENT_ACC_ID,tDOCTYPE,tDOCNUMB,DDOCDATE)
           returning JURNALEXP.ID into JURNALEXPID;
           PERFORM p_system_doclinks_add('DISTRIBDATA_AGENT',JR.DISTRIBDATA_AGENTID,'JURNALEXP',JURNALEXPID);
           if TDOCNUMB is not null or DDOCDATE is not null or TDOCTYPE is not null THEN
              for DOC in
              select d.tableout, d.keyout
                from doclinks d,
                     doclinks f
               where d.tablein ilike 'DISTRIBDATA_AGENT'
                 and d.keyin = JR.DISTRIBDATA_AGENTID
                 and d.tableout ilike ANY(ARRAY['EXPSHD_BA','EXPSHD_LBO','EXPSHD_POF'])
              LOOP
                 PERFORM p_system_doclinks_add(DOC.TABLEOUT,DOC.KEYOUT,'JURNALEXP',JURNALEXPID);
              end loop;
           end if;
         end if;
         if JR.SUM_LBO > 0 then
           select r.ID
            into nTYPEID
            from record_types r
           where r.record_type ilike (select case upper(JR.ACCTYPE)
                                              when 'IN' then 'OUTIN_LBO'
                                              when '14' then 'OUT14_LBO'
                                             else 'OUT03_LBO' end);
           insert into JURNALEXP(UID,LID,RECORD_TYPESID,RECORD_DATE,BUDGETS_ID,YEAR_U,KBR_ID,DOCTYPEP,DOCNUMBP,DOCDATEP,SUM,NOTE,CAPOBJECTS_ID,AGENT_ACC_ID,DOCTYPE,DOCNUMB,DOCDATE)
           values(nUID,nLID,nTYPEID,RC.DOCDATE,RC.BUDGETS_ID,RC.YEAR_U+JR.PLANNING_PERIOD,JR.KBR_ID,'Распределение бюджетных данных',RC.DOCNUMB,RC.DOCDATE,JR.SUM_LBO,RC.NOTE,JR.CAPOBJECTS_ID,JR.AGENT_ACC_ID,tDOCTYPE,tDOCNUMB,DDOCDATE)
           returning JURNALEXP.ID into JURNALEXPID;
           PERFORM p_system_doclinks_add('DISTRIBDATA_AGENT',JR.DISTRIBDATA_AGENTID,'JURNALEXP',JURNALEXPID);
           if TDOCNUMB is not null or DDOCDATE is not null or TDOCTYPE is not null THEN
              for DOC in
              select d.tableout, d.keyout
                from doclinks d,
                     doclinks f
               where d.tablein ilike 'DISTRIBDATA_AGENT'
                 and d.keyin = JR.DISTRIBDATA_AGENTID
                 and d.tableout ilike ANY(ARRAY['EXPSHD_BA','EXPSHD_LBO','EXPSHD_POF'])
              LOOP
                 PERFORM p_system_doclinks_add(DOC.TABLEOUT,DOC.KEYOUT,'JURNALEXP',JURNALEXPID);
              end loop;
           end if;
         end if;
         if JR.SUM_POF > 0 then
          select r.ID
            into nTYPEID
            from record_types r
           where r.record_type ilike (select case upper(JR.ACCTYPE)
                                              when 'IN' then 'OUTIN_POF'
                                              when '14' then 'OUT14_POF'
                                             else 'OUT03_POF' end);
           insert into JURNALEXP(UID,LID,RECORD_TYPESID,RECORD_DATE,BUDGETS_ID,YEAR_U,KBR_ID,DOCTYPEP,DOCNUMBP,DOCDATEP,SUM,NOTE,CAPOBJECTS_ID,AGENT_ACC_ID,DOCTYPE,DOCNUMB,DOCDATE)
           values(nUID,nLID,nTYPEID,RC.DOCDATE,RC.BUDGETS_ID,RC.YEAR_U+JR.PLANNING_PERIOD,JR.KBR_ID,'Распределение бюджетных данных',RC.DOCNUMB,RC.DOCDATE,JR.SUM_POF,RC.NOTE,JR.CAPOBJECTS_ID,JR.AGENT_ACC_ID,tDOCTYPE,tDOCNUMB,DDOCDATE)
           returning JURNALEXP.ID into JURNALEXPID;
           PERFORM p_system_doclinks_add('DISTRIBDATA_AGENT',JR.DISTRIBDATA_AGENTID,'JURNALEXP',JURNALEXPID);
           if TDOCNUMB is not null or DDOCDATE is not null or TDOCTYPE is not null THEN
              for DOC in
              select d.tableout, d.keyout
                from doclinks d,
                     doclinks f
               where d.tablein ilike 'DISTRIBDATA_AGENT'
                 and d.keyin = JR.DISTRIBDATA_AGENTID
                 and d.tableout ilike ANY(ARRAY['EXPSHD_BA','EXPSHD_LBO','EXPSHD_POF'])
              LOOP
                 PERFORM p_system_doclinks_add(DOC.TABLEOUT,DOC.KEYOUT,'JURNALEXP',JURNALEXPID);
              end loop;
           end if;
         end if;
     END LOOP;
     tDOCTYPE:=NULL;tDOCNUMB:=NULL;DDOCDATE:=NULL;
     PERFORM p_action_set_status('DISTRIBDATA',RC.ID::text,'1');
  END LOOP;
  
end;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;

ALTER FUNCTION public.p_action_fin_makeentrydd (idlist text, uid bigint)
  OWNER TO magicbox;
CREATE OR REPLACE FUNCTION public.p_action_fin_to_form_dis (
  idlist text,
  uid bigint,
  distrib_type text,
  distrib_date date,
  note text,
  person_id bigint,
  person1_id bigint
)
RETURNS void AS
$body$
/*
  Сформировать распоряжение на перечисление МБТ    
*/
declare
  nUID  BIGINT:=UID;
  RC    RECORD;
  SP    RECORD;
  next_num integer;
  tDISTRIB_TYPE text:=distrib_type;
  tDISTRIB_DATE date:=distrib_date;
  tNOTE         TEXT:=note;
  nPERSON_ID    bigint:=person_id;
  nPERSON1_ID   bigint:=person1_id;
  nDISTRIB_MBTID    bigint;
  nDISTRIB_MBT_REC  bigint;
  --определим уровень доступа
  nLID_DISTRIBMBT      bigint:=P_SYSTEM_GEN_LID('DISTRIB_MBT',nUID);
  nLID_DISTRIB_MBT_REC bigint:=P_SYSTEM_GEN_LID('DISTRIB_MBT_REC',nUID);
begin

  for RC in
      select m.id,
             m.budgets_id,
             m.year_u,
             m.note,
             m.signdate,
             m.enddate,
             m.mbt_listid,
             m.contract_sum,
             m.date_pod
        from MBT_CONTRACT m
       where m.ID = any(p_system_get_selectlist(idlist))
  loop
  
      select coalesce(regexp_replace(max(lpad(distrib_nom,80,' ')), '[^0-9]', '', 'g')::int+1,1) into next_num from DISTRIB_MBT d where d.YEAR_U = RC.YEAR_U;
      insert into DISTRIB_MBT(uid, lid, distrib_type, distrib_nom, distrib_date, budgets_id, year_u, signdate, enddate, mbt_listid, note, contract_sum, status, person_id, person1_id, date_pod)
      values(nUID, nLID_DISTRIBMBT, tDISTRIB_TYPE, COALESCE(next_num,1), tDISTRIB_DATE, RC.BUDGETS_ID, RC.YEAR_U, RC.SIGNDATE, RC.ENDDATE, RC.MBT_LISTID, tNOTE, RC.CONTRACT_SUM, '0', nPERSON_ID, nPERSON1_ID, RC.DATE_POD)
      returning DISTRIB_MBT.ID into nDISTRIB_MBTID;
      
      for SP in 
          select m.ID,
                 m.MBT_CONTRACTID,
                 m.MBT_RECIPID,
                 m.ALLOCATED_SUM,
                 m.NOTE
            from MBT_CONTACT_REC m
           where m.MBT_CONTRACTID = RC.ID
       loop
          insert into DISTRIB_MBT_REC(uid, lid, distrib_mbtid, mbt_contactid, mbt_recipid, allocated_sum, note)
          values(nUID, nLID_DISTRIB_MBT_REC, nDISTRIB_MBTID, SP.MBT_CONTRACTID, SP.MBT_RECIPID, SP.ALLOCATED_SUM, SP.NOTE)
          returning DISTRIB_MBT_REC.ID into nDISTRIB_MBT_REC;
          PERFORM p_system_doclinks_add('MBT_CONTACT_REC',SP.ID,'DISTRIB_MBT_REC',nDISTRIB_MBT_REC);
       end loop;
      
  end loop;
end;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;

ALTER FUNCTION public.p_action_fin_to_form_dis (idlist text, uid bigint, distrib_type text, distrib_date date, note text, person_id bigint, person1_id bigint)
  OWNER TO magicbox;
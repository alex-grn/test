CREATE OR REPLACE FUNCTION p_get_kbk_code(n_id bigint) RETURNS text AS
$body$
DECLARE 
  sRESULT TEXT ;
BEGIN
  sRESULT = NULL ;
  BEGIN
	SELECT
		COALESCE (k1.CODE, '..') || COALESCE (k4.CODE, '..') || COALESCE (k5.CODE, '..') || COALESCE (k7.CODE, '..') || COALESCE (k9.CODE, '..') || COALESCE (k12.CODE, '..') || COALESCE (k14.CODE, '..') || COALESCE (k18.CODE, '..') INTO sRESULT
	FROM
		KbkIn f
	LEFT JOIN KBK10IN k1 ON f.KBK10IN = k1. ID
	LEFT JOIN KBK20IN k4 ON f.KBK20IN = k4. ID
	LEFT JOIN KBK30IN k5 ON f.KBK30IN = k5. ID
	LEFT JOIN KBK40IN k7 ON f.KBK40IN = k7. ID
	LEFT JOIN KBK50IN k9 ON f.KBK50IN = k9. ID
	LEFT JOIN KBK60IN k12 ON f.KBK60IN = k12. ID
	LEFT JOIN KBK70IN k14 ON f.KBK70IN = k14. ID
	LEFT JOIN KBK80IN k18 ON f.KBK80IN = k18. ID
	WHERE	f. ID = n_id ; EXCEPTION
  WHEN OTHERS THEN
	sRESULT = NULL ;
  END ; 
  RETURN sRESULT ;
END;
$body$
language plpgsql volatile;
